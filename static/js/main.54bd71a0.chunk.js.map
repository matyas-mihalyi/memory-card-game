{"version":3,"sources":["components/cards.tsx","components/table.tsx","components/modal.tsx","components/navbar.tsx","hooks/get-random-mons.tsx","App.tsx","hooks/modal-hook.tsx","hooks/number-of-cards.tsx","index.tsx"],"names":["Cards","handleClick","flippedCards","matchedCards","cardsToRender","className","map","pokemon","i","onClick","some","card","src","sprite","alt","pokemonName","Table","flipBack","numberOfCards","useState","setFlippedCards","setMatchedCards","useEffect","length","evaluate","a","b","pokemonId","state","setTimeout","Fragment","id","clearTimeout","Modal","isVisible","toggleModal","decrementCards","incrementCards","ReactDOM","toString","document","querySelector","Navbar","KantoIds","arr","Array","array","j","Math","floor","random","temp","shuffle","useFetchMons","num","pokemons","setPokemons","pokemonsToFetch","slice","pokemonIds","allCards","forEach","fetch","then","res","json","data","name","sprites","front_default","pokemonCopy","push","allmons","sort","catch","error","console","log","App","setIsVisible","useModal","setNumberOfCards","useNumberOfCards","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.54bd71a0.chunk.js","sourcesContent":["import { CardsProps } from \"../interfaces\";\r\n\r\n\r\nexport const Cards = ({ handleClick, flippedCards, matchedCards, cardsToRender}: CardsProps): JSX.Element => {\r\n\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n    { \r\n      cardsToRender.map((pokemon, i) => \r\n        (\r\n        <div className=\"card-wrapper\" key={i} onClick={()=>handleClick(i)}>  \r\n          <div className={\r\n            flippedCards.some((card: number)=> card === i) || matchedCards.some((card: number)=> card === i) \r\n            ? \"card-inner flipped\"\r\n            : \"card-inner\"\r\n            }>\r\n            <div className=\"card-front\">\r\n              <img src={pokemon.sprite} alt={pokemon.pokemonName} />\r\n            </div>\r\n            <div className=\"card-back\" />\r\n          </div>\r\n        </div>\r\n      ))\r\n    }    \r\n    </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Cards, } from \"./cards\";\r\nimport { TableProps } from \"../interfaces\";\r\n\r\nimport React from \"react\";\r\n\r\n\r\n//COMPONENT\r\nexport const Table = ({numberOfCards, cardsToRender}: TableProps) => {\r\n  const [flippedCards, setFlippedCards] = useState<number[]>([]);\r\n  const [matchedCards, setMatchedCards] = useState<number[]>([]);\r\n\r\n  //evaluate recently flipped cards \r\n  useEffect(()=>{\r\n    //if cards match keep\r\n    if (flippedCards.length === 2) {evaluate(flippedCards);};\r\n  }, [flippedCards])\r\n\r\n  //timeout to flip back cards if not matched\r\n  let flipBack:any; \r\n  const cardFlip = () => {flipBack = setTimeout(()=>{setFlippedCards(()=>([]))},1800);};\r\n  const noFlip = () => {clearTimeout(flipBack);};\r\n\r\n  const evaluate = (flippedCards: number[]):void => {\r\n    const [a, b] = flippedCards;\r\n    //if it's a match\r\n    if (cardsToRender[a].pokemonId === cardsToRender[b].pokemonId) {\r\n      setMatchedCards((state)=>([...state, a, b]));\r\n    } else {\r\n      cardFlip();\r\n    }\r\n  } \r\n\r\n  //handleclick\r\n  const handleClick = (i: number):void => {\r\n    //check if it's already flipped\r\n    if (flippedCards.some((id)=> id === i) || matchedCards.some((id)=> id === i)) {\r\n      return;\r\n    }\r\n    //add to flippedCards\r\n    else if (flippedCards.length === 1) {\r\n      setFlippedCards((state)=>([...state, i]));\r\n    } else {\r\n      setFlippedCards(()=>([i]));\r\n      noFlip()\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {cardsToRender.length === numberOfCards\r\n        ? <Cards \r\n            cardsToRender={cardsToRender}\r\n            numberOfCards={numberOfCards}\r\n            handleClick={handleClick}\r\n            flippedCards={flippedCards}\r\n            matchedCards={matchedCards}\r\n          />\r\n        : <div className=\"loading-message\">Loading cards...</div>}\r\n    </React.Fragment>\r\n  )\r\n}","import * as React from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\nimport { ModalProps } from '../interfaces'\r\n\r\n  \r\nexport  const Modal = ({ isVisible, toggleModal, decrementCards, incrementCards, numberOfCards}: ModalProps ) => {\r\n\r\n  return isVisible\r\n  ? ReactDOM.createPortal(\r\n      <div className=\"modal-wrapper\">\r\n        <div className=\"settings-container\">\r\n            <h3>Number of Pok√©mons</h3>\r\n          <div className=\"number-of-cards\">\r\n            <span onClick={()=>decrementCards()} className=\"material-icons\">remove</span>\r\n            <span className=\"number-of-mons\">{numberOfCards.toString()}</span>\r\n            <span onClick={()=>incrementCards()} className=\"material-icons\">add</span>\r\n          </div>\r\n\r\n            <button onClick={toggleModal}>OK</button>\r\n        </div>\r\n      </div>, document.querySelector(\"#modal\")!\r\n    )\r\n  : null;\r\n}\r\n\r\n\r\n","import React from \"react\"\r\nimport { ModalProps } from \"../interfaces\"\r\nimport { Modal } from \"./modal\"\r\n\r\nexport const Navbar = ({isVisible, toggleModal, numberOfCards, incrementCards, decrementCards}: ModalProps): JSX.Element => {\r\n  \r\n  return (\r\n    <nav>\r\n      <div className=\"timer\">1:00</div>\r\n      <div className=\"reset\"><span className=\"material-icons\">restart_alt</span></div>\r\n      <div className=\"menu\" onClick={toggleModal}><span className=\"material-icons\">settings</span></div>\r\n      <Modal isVisible={isVisible} toggleModal={toggleModal} numberOfCards={numberOfCards} incrementCards={incrementCards} decrementCards={decrementCards}/>\r\n    </nav>\r\n\r\n  )\r\n}","import { Pokemon } from \"../interfaces\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n//source for shuffling algorhythm: https://medium.com/@nitinpatel_20236/how-to-shuffle-correctly-shuffle-an-array-in-javascript-15ea3f84bfb\r\nexport const shuffle = (array: Pokemon[]|number[]) => {\r\n  for(let i = array.length - 1; i > 0; i--){\r\n    const j = Math.floor(Math.random() * i)\r\n    const temp = array[i]\r\n    array[i] = array[j]\r\n    array[j] = temp\r\n  }\r\n}\r\n\r\nconst KantoIds = (): number[] => {\r\n  const arr: number[] = new Array(150);\r\n  for (let i = 0; i < arr.length; i++){   //based on https://tutorial.eyehunts.com/js/javascript-fill-array-with-incrementing-numbers-integer-example-code/\r\n    arr[i] =i+1;\r\n  }\r\n  shuffle(arr)\r\n  return arr\r\n}\r\n\r\n//get the first n number of IDs based on number of cards settings\r\nexport const pokemonIds = (num: number): number[] => {\r\n  return KantoIds().slice(0, num/2);\r\n}\r\n\r\n\r\n//CUSTOM HOOK FOR FETCHING POKEMON DATA\r\n\r\nexport const useFetchMons = (num: number) => {\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]); \r\n\r\n  const pokemonsToFetch = pokemonIds(num);\r\n\r\n  \r\n  useEffect(()=> {\r\n    let allCards: Pokemon[] = [];\r\n    pokemonsToFetch.forEach((id, i) => {\r\n      fetch(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        const pokemon = {\r\n          pokemonName: data.name+\"_1\",\r\n          pokemonId: data.id,\r\n          sprite: `${data.sprites.front_default}`,\r\n        }\r\n        const pokemonCopy = {\r\n          pokemonName: data.name+\"_2\",\r\n          pokemonId: data.id,\r\n          sprite: `${data.sprites.front_default}`\r\n        }\r\n\r\n        allCards.push(pokemon, pokemonCopy); \r\n\r\n        return allCards;\r\n      })\r\n      .then((allmons)=> {\r\n        if (allmons.length === pokemonsToFetch.length *2) {\r\n          allmons.sort(()=> Math.random() - 0.5);\r\n          setPokemons(() => (allmons));\r\n        }\r\n      })\r\n      .catch((error)=> console.log(error));\r\n    });\r\n    \r\n  }, [num]);\r\n  return  { pokemons } \r\n}","import React from 'react';\r\nimport { Table } from './components/table';\r\nimport { Navbar } from './components/navbar'\r\nimport { useNumberOfCards } from './hooks/number-of-cards'\r\nimport { useModal } from './hooks/modal-hook';\r\nimport { useFetchMons } from './hooks/get-random-mons';\r\n\r\nfunction App() {\r\n\r\n  const { isVisible, toggleModal} = useModal();\r\n  const { numberOfCards, incrementCards, decrementCards } = useNumberOfCards();\r\n  const { pokemons } = useFetchMons(numberOfCards);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    <Table \r\n      //number of cards\r\n      numberOfCards={numberOfCards}\r\n      cardsToRender={pokemons}\r\n      />\r\n    <Navbar \r\n      //modal\r\n      isVisible={isVisible} \r\n      toggleModal={toggleModal}\r\n      //number of cards\r\n      numberOfCards={numberOfCards}\r\n      incrementCards={incrementCards}\r\n      decrementCards={decrementCards}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","//from https://medium.com/swlh/building-modals-in-react-64d92591f4b\r\n\r\nimport { useState } from \"react\";\r\n\r\nexport const useModal = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  \r\n  function toggleModal() {\r\n    setIsVisible(!isVisible);\r\n  }\r\n\r\n  return {\r\n    isVisible,\r\n    toggleModal,\r\n  }\r\n};\r\n\r\n\r\n\r\n","import { useState } from \"react\";\r\n\r\nexport const useNumberOfCards = () => {\r\n  const [numberOfCards, setNumberOfCards] = useState<number>(8)\r\n\r\n  //increment & decrement number of cards\r\n\r\n  const incrementCards = () => {\r\n    if (numberOfCards < 28) {\r\n      setNumberOfCards((state)=>(state+2));\r\n    }\r\n  }\r\n  \r\n  const decrementCards = () => {\r\n    if (numberOfCards > 4) {\r\n      setNumberOfCards((state)=>(state-2));\r\n    }\r\n  }\r\n  \r\n  return { numberOfCards, incrementCards, decrementCards, }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}